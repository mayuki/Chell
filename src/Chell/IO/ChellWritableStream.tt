<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".Generated.cs" #>
<#
var types = new []
{
    (0, "string?"),
    (0, "char"),
    (0, "char[]?"),
    (1, "object?"),
    (1, "double"),
    (1, "float"),
    (1, "long"),
    (1, "int"),
    (1, "ReadOnlySpan<char>"),
    (2, "ReadOnlyMemory<char>"),
};
#>
#nullable enable
/// <auto-generated />
using System;
using System.IO;
using System.Threading.Tasks;

namespace Chell.IO
{
    public partial class ChellWritableStream
    {
<# foreach (var (target, type) in types) { #>
<#   if (target == 0 || target == 1) { #>
        public void Write(<#= type #> value) => _writer.Write(value);
        public void WriteLine(<#= type #> value) => _writer.WriteLine(value);
<#   } #>
<#   if (target == 0 || target == 2) { #>
        public Task WriteAsync(<#= type #> value) => _writer.WriteAsync(value);
        public Task WriteLineAsync(<#= type #> value) => _writer.WriteLineAsync(value);
<#   } #>
<# } #>
    }
}